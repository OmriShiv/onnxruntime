jobs:
- job: Linux_CPU_Minimal_E2E
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool: Linux-CPU
  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: Docker@2
    displayName: login
    inputs:
      containerRegistry: onnxruntimeregistry
      command: login
      addPipelineData: false
  - task: CmdLine@2
    inputs:
      script: |
        # this folder is for the models to be excluded
        mkdir -p $HOME/.models_to_exclude
        mkdir -p $HOME/.onnx
        # build a full ORT first
        docker run --rm \
          --volume /data/onnx:/data/onnx:ro \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --volume /data/models:/build/models:ro \
          --volume $HOME/.onnx:/home/onnxruntimedev/.onnx \
          --volume $HOME/.test_data:/home/onnxruntimedev/.test_data \
          --volume $HOME/.models_to_exclude:/home/onnxruntimedev/.models_to_exclude \
          -e ALLOW_RELEASED_ONNX_OPSET_ONLY=1 \
          -e NIGHTLY_BUILD \
          -e BUILD_BUILDNUMBER \
          onnxruntimeregistry.azurecr.io/internal/azureml/onnxruntimecpubuild:ch36 \
            /bin/bash /onnxruntime_src/tools/ci_build/github/linux/ort_minimal/build_full_ort_and_create_ort_file.sh
      workingDirectory: $(Build.SourcesDirectory)
  - task: Docker@2
    displayName: logout
    inputs:
      containerRegistry: onnxruntimeregistry
      command: logout
      addPipelineData: false
  - task: PublishTestResults@2
    displayName: 'Publish unit test results'
    inputs:
      testResultsFiles: '**/*.results.xml'
      searchFolder: '$(Build.BinariesDirectory)'
      testRunTitle: 'Unit Test Run'
    condition: succeededOrFailed()

  - template: templates/component-governance-component-detection-steps.yml
    parameters:
      condition: 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
