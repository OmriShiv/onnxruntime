jobs:
- job: Linux_CPU_Minimal_E2E
  timeoutInMinutes: 120
  workspace:
    clean: all
  pool: Linux-CPU
  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: Docker@2
    displayName: login
    inputs:
      containerRegistry: onnxruntimeregistry
      command: login
      addPipelineData: false
  - task: CmdLine@2
    displayName: Build full onnxruntime
    inputs:
      script: |
        mkdir -p $HOME/.onnx
        # build a full ORT first
        docker run --rm \
          --volume /data/onnx:/data/onnx:ro \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --volume /data/models:/build/models:ro \
          --volume $HOME/.onnx:/home/onnxruntimedev/.onnx \
          -e ALLOW_RELEASED_ONNX_OPSET_ONLY=1 \
          -e NIGHTLY_BUILD \
          -e BUILD_BUILDNUMBER \
          onnxruntimeregistry.azurecr.io/internal/azureml/onnxruntimecpubuild:ch2j \
            /opt/python/cp37-cp37m/bin/python3 /onnxruntime_src/tools/ci_build/build.py \
              --build_dir /build --cmake_generator Ninja \
              --config Debug \
              --skip_submodule_sync \
              --parallel \
              --build_wheel \
              --skip_tests \
              --enable_pybind \
              --cmake_extra_defines PYTHON_INCLUDE_DIR=/opt/python/cp37-cp37m/include/python3.7m PYTHON_LIBRARY=/usr/lib64/librt.so
          # copy the test data to a separated folder
          mkdir -p $HOME/.test_data
          cp -Rf $(Build.SourcesDirectory)/onnxruntime/test/testdata/ort_minimal_e2e_test_data $HOME/.test_data
          # install python wheel from the full build
          /opt/python/cp37-cp37m/bin/python3 -m pip install -U $(Build.BinariesDirectory)/Debug/dist/*
      workingDirectory: $(Build.SourcesDirectory)
  - task: CmdLine@2
    displayName: Create ORT model
    inputs:
      script: |
          # copy the test data to a separated folder
          mkdir -p $HOME/.test_data
          cp -Rf $(Build.SourcesDirectory)/onnxruntime/test/testdata/ort_minimal_e2e_test_data $HOME/.test_data
          # install python wheel from the full build
          /usr/bin/python3 -m pip install -U $(Build.BinariesDirectory)/Debug/dist/*
      workingDirectory: $(Build.SourcesDirectory)
  - task: Docker@2
    displayName: logout
    inputs:
      containerRegistry: onnxruntimeregistry
      command: logout
      addPipelineData: false
  - task: PublishTestResults@2
    displayName: 'Publish unit test results'
    inputs:
      testResultsFiles: '**/*.results.xml'
      searchFolder: '$(Build.BinariesDirectory)'
      testRunTitle: 'Unit Test Run'
    condition: succeededOrFailed()

  - template: templates/component-governance-component-detection-steps.yml
    parameters:
      condition: 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
